{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RestaurantFavesService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  GetOrder(restaurant, orderAgain) {\n    const queryParams = {};\n    if (restaurant !== null) {\n      queryParams.restaurant = restaurant;\n    }\n    if (orderAgain !== null) {\n      queryParams.orderAgain = orderAgain;\n    }\n    return this.http.get(`${this.baseUrl}api/Order/`, {\n      params: queryParams\n    });\n  }\n  GetByID(id) {\n    return this.http.get(`${this.baseUrl}api/Order/${id}`);\n  }\n  AddOrder(newOrder) {\n    return this.http.post(`${this.baseUrl}api/Instrument`, newOrder);\n  }\n  DeleteOrder(id) {\n    return this.http.delete(`${this.baseUrl}api/Order/${id}`);\n  }\n  UpdateOrder(id, newOrder) {\n    return this.http.put(`${this.baseUrl}api/Order/${id}, `);\n  }\n}\nRestaurantFavesService.ɵfac = function RestaurantFavesService_Factory(t) {\n  return new (t || RestaurantFavesService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nRestaurantFavesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RestaurantFavesService,\n  factory: RestaurantFavesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAEjCC,YAAoBC,IAAe,EAA8BC,OAAe;IAA5D,SAAI,GAAJD,IAAI;IAAyC,YAAO,GAAPC,OAAO;EAAY;EAGtFC,QAAQ,CAACC,UAAyB,EAAEC,UAAyB;IAC3D,MAAMC,WAAW,GAAQ,EAAS;IAClC,IAAIF,UAAU,KAAK,IAAI,EACvB;MACEE,WAAW,CAACF,UAAU,GAAGA,UAAU;;IAErC,IAAGC,UAAU,KAAK,IAAI,EACtB;MACEC,WAAW,CAACD,UAAU,GAAGA,UAAU;;IAGrC,OAAO,IAAI,CAACJ,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,OAAO,YAAY,EAAC;MAACM,MAAM,EAAEF;IAAW,CAAC,CAAC;EAElF;EAEAG,OAAO,CAACC,EAAS;IACf,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAU,GAAG,IAAI,CAACL,OAAO,aAAaQ,EAAE,EAAE,CAAC;EACjE;EAEAC,QAAQ,CAACC,QAAc;IACrB,OAAO,IAAI,CAACX,IAAI,CAACY,IAAI,CAAQ,GAAG,IAAI,CAACX,OAAO,gBAAgB,EAAEU,QAAQ,CAAC;EACzE;EAEAE,WAAW,CAACJ,EAAS;IACnB,OAAO,IAAI,CAACT,IAAI,CAACc,MAAM,CAAQ,GAAG,IAAI,CAACb,OAAO,aAAaQ,EAAE,EAAE,CAAC;EAClE;EAEAM,WAAW,CAACN,EAAS,EAAEE,QAAc;IACnC,OAAO,IAAI,CAACX,IAAI,CAACgB,GAAG,CAAQ,GAAG,IAAI,CAACf,OAAO,aAAaQ,EAAE,IAAI,CAAC;EACjE;;AAlCaX,sBAAsB;mBAAtBA,sBAAsB,0CAEY,UAAU;AAAA;AAF5CA,sBAAsB;SAAtBA,sBAAsB;EAAAmB,SAAtBnB,sBAAsB;EAAAoB,YAFrB;AAAM","names":["RestaurantFavesService","constructor","http","baseUrl","GetOrder","restaurant","orderAgain","queryParams","get","params","GetByID","id","AddOrder","newOrder","post","DeleteOrder","delete","UpdateOrder","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/fsverellen/Projects/Restaurant Faves/Restaurant Faves/ClientApp/src/app/service/restaurant-faves.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Inject, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Order } from '../models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantFavesService {\n\n  constructor(private http:HttpClient, @Inject('BASE_URL') private baseUrl: string) { }\n\n\nGetOrder(restaurant: string | null, orderAgain:boolean | null):Observable<Order[]>{\n  const queryParams: any = {} as any;\n  if (restaurant !== null)\n  {\n    queryParams.restaurant = restaurant;\n  }\n  if(orderAgain !== null)\n  {\n    queryParams.orderAgain = orderAgain;\n  }\n\n  return this.http.get<Order[]>(`${this.baseUrl}api/Order/`,{params: queryParams});\n \n}\n\nGetByID(id:number):Observable<Order[]>{\n  return this.http.get<Order[]>(`${this.baseUrl}api/Order/${id}`);\n}\n\nAddOrder(newOrder:Order):Observable<Order>{\n  return this.http.post<Order>(`${this.baseUrl}api/Instrument`, newOrder);\n}\n\nDeleteOrder(id:number):Observable<Order>{\n  return this.http.delete<Order>(`${this.baseUrl}api/Order/${id}`);\n}\n\nUpdateOrder(id:number, newOrder:Order):Observable<Order>{\n  return this.http.put<Order>(`${this.baseUrl}api/Order/${id}, `);\n}\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}